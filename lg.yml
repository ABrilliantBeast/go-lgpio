--- 
GENERATOR: 
  PackageName: lg
  PackageDescription: "Package lg provides Go bindings for lgpiod."
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  SysIncludes: ["lgpio.h"]
  FlagGroups:
    - {name: LDFLAGS, flags: [-llgpio]}

PARSER: 
  IncludePaths: ["/usr/include", "."]
  SourcesPaths: ["lgpio.h", "lgGpioAlert.h"]

TRANSLATOR: 
  ConstRules: 
    defines: expand
  Rules: 
    global: 
      - {action: accept, from: "^lg"}
      - {action: accept, from: "^LG"}
      - {transform: export}
    type: 
      - {action: replace, from: "_t$"}
      - {action: replace, from: "_s$"}
      - {action: replace, from: "_p$"}
      - {action: ignore, from: "^lgGpioAlert"}
      - {action: ignore, from: "^lgGpioAlertsFunc_t$"}
    function:
      - {action: ignore, from: "^lgGpioSetAlertsFunc$" }
      - {action: ignore, from: "^lgGpioSetSamplesFunc$"}
    private:
      - {transform: unexport}
  PtrTips:
    function:
      - {target: ^lgGpioGetChipInfo$, tips: [0,ref]}
      - {target: ^lgGpioGetLineInfo$, tips: [0, 0, ref]}
      - {target: ^lgGroupClaimInput$, tips: [0, 0, size, arr]}
      - {target: ^lgGroupClaimOutput$, tips: [0, 0, size, arr, arr]}
      - {target: ^lgGroupRead$, tips: [0, 0, ref]}
      - {target: ^lgTxWave$, tips: [0, 0, size, arr]}
      - {target: ^lgI2cReadBlockData$, tips: [0, 0, arr]}
      - {target: ^lgI2cBlockProcessCall$, tips: [0, 0, arr, size]}
      - {target: ^lgI2cReadI2CBlockData$, tips: [0, 0, arr, size]}
      - {target: ^lgI2cReadDevice$, tips: [0, arr, size]}
      - {target: ^lgI2cSegments$, tips: [0, arr, size]}
      - {target: ^lgI2cZip$, tips: [0, arr, size, arr, size]}
      - {target: ^lgSerialRead$, tips: [0, arr, size]}
      - {target: ^lgSpiRead$, tips: [0, arr, size]}
      - {target: ^lgSpiXfer$, tips: [0, arr, arr, size]}
      - {target: ^lgThreadStop$, tips: [sref]}
      - {target: ^lguSbcName$, tips: [arr, size]}
      - {target: ^lguGetInternal$, tips: [0, sref]}
      - {target: ^dummy$, tips: [size, arr]}
